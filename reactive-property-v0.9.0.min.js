(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.ReactiveProperty=factory()})(this,function(){"use strict";var errors={tooManyArgsConstructor:"ReactiveProperty(value) accepts only a single argument, the initial value.",tooManyArgsSetter:"reactiveProperty(newValue) accepts only a single argument, the new value.",onNonFunction:"ReactiveProperty.on(listener) only accepts functions, not values.",onArgs:"ReactiveProperty.on(listener) accepts exactly one argument, the listener function."};return function ReactiveProperty(value){var listeners;if(arguments.length>2){throw Error(errors.tooManyArgsConstructor)}function reactiveProperty(newValue){if(arguments.length>1){throw Error(errors.tooManyArgsSetter)}if(arguments.length===1){var oldValue=value;value=newValue;if(listeners){for(var i=0;i<listeners.length;i++){listeners[i](newValue,oldValue)}}return this}return value}reactiveProperty.on=function(listener){if(typeof listener!=="function"){throw Error(errors.onNonFunction)}if(arguments.length>1||arguments.length===0){throw Error(errors.onArgs)}if(!listeners){listeners=[]}listeners.push(listener);if(value!==void 0){listener(value)}return listener};reactiveProperty.off=function(listenerToRemove){if(listeners){listeners=listeners.filter(function(listener){return listener!==listenerToRemove})}};reactiveProperty.destroy=function(){listeners=[]};return reactiveProperty}});